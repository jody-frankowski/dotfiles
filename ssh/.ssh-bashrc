# If not running interactively, don't do anything
[[ $- != *i* ]] && return

[ -f /etc/bash.bashrc ] && . /etc/bash.bashrc
### bash settings ###
# insensitive completion
bind 'set completion-ignore-case on'

# ignore commands starting with spaces and duplicates
HISTCONTROL=ignoreboth
# show human readable time
HISTTIMEFORMAT="%c "

# check the window size after each command and, if necessary, updates the values of LINES and COLUMNS.
shopt -s checkwinsize
# TODO needed???
#shopt -s histappend

### aliases ###
# platform specific
if [ $(uname -s) = "OpenBSD" ]; then
    if command -v gls ; then
        alias ls='gls --color=auto --group-directories-first'
    fi
else
    alias grep='grep --color=auto'
    alias ls='ls --color=auto --group-directories-first'
fi

alias ..='cd ..'
alias ...='cd ../..'
alias cgrep="grep -Ev '^\s*[#$;]|^$'"
alias l='ls -lFh'     # size,show type,human readable
alias la='ls -lAFh'   # long list,show almost all,show type,human readable
alias latr='ls -latr'
alias sl=ls
alias nxr='nginx -s reload'
alias nxt='nginx -t'
alias lir='lighttpd reload'
alias lit='lighttpd -f /etc/lighttpd/lighttpd.conf -t'
alias apar='apachectl -k graceful'
alias apat='apachectl -t && apachectl -t -D DUMP_VHOSTS'
alias meminfo='free -m -l -t'
alias pscpu='ps auxf | sort -n -k 3'
alias psg="ps aux | grep"
alias psmem='ps auxf | sort -n -k 4'
alias rm='rm -i'
alias v=vi
command -v /usr/bin/vim > /dev/null && alias v=vim
alias glog="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gst='git status'
alias cpv='rsync -avP'
alias cpvr='rsync -avP --inplace --size-only -i'
alias cpvs='rsync -avP --rsync-path="sudo rsync"'

### env ###
export LS_COLORS='no=00;38;5;244:rs=0:di=00;38;5;33:ln=01;38;5;37:mh=00:pi=48;5;230;38;5;136;01:so=48;5;230;38;5;136;01:do=48;5;230;38;5;136;01:bd=48;5;230;38;5;244;01:cd=48;5;230;38;5;244;01:or=48;5;235;38;5;160:su=48;5;160;38;5;230:sg=48;5;136;38;5;230:ca=30;41:tw=48;5;64;38;5;230:ow=48;5;235;38;5;33:st=48;5;33;38;5;230:ex=01;38;5;64:*.tar=00;38;5;61:*.tgz=01;38;5;61:*.arj=01;38;5;61:*.taz=01;38;5;61:*.lzh=01;38;5;61:*.lzma=01;38;5;61:*.tlz=01;38;5;61:*.txz=01;38;5;61:*.zip=01;38;5;61:*.z=01;38;5;61:*.Z=01;38;5;61:*.dz=01;38;5;61:*.gz=01;38;5;61:*.lz=01;38;5;61:*.xz=01;38;5;61:*.bz2=01;38;5;61:*.bz=01;38;5;61:*.tbz=01;38;5;61:*.tbz2=01;38;5;61:*.tz=01;38;5;61:*.deb=01;38;5;61:*.rpm=01;38;5;61:*.jar=01;38;5;61:*.rar=01;38;5;61:*.ace=01;38;5;61:*.zoo=01;38;5;61:*.cpio=01;38;5;61:*.7z=01;38;5;61:*.rz=01;38;5;61:*.apk=01;38;5;61:*.gem=01;38;5;61:*.zpaq=01;38;5;61:*.arc=01;38;5;61:*.jpg=00;38;5;136:*.JPG=00;38;5;136:*.jpeg=00;38;5;136:*.gif=00;38;5;136:*.bmp=00;38;5;136:*.pbm=00;38;5;136:*.pgm=00;38;5;136:*.ppm=00;38;5;136:*.tga=00;38;5;136:*.xbm=00;38;5;136:*.xpm=00;38;5;136:*.tif=00;38;5;136:*.tiff=00;38;5;136:*.png=00;38;5;136:*.svg=00;38;5;136:*.svgz=00;38;5;136:*.mng=00;38;5;136:*.pcx=00;38;5;136:*.dl=00;38;5;136:*.xcf=00;38;5;136:*.xwd=00;38;5;136:*.yuv=00;38;5;136:*.cgm=00;38;5;136:*.emf=00;38;5;136:*.eps=00;38;5;136:*.CR2=00;38;5;136:*.ico=00;38;5;136:*.webp=00;38;5;136:*.tex=01;38;5;245:*.rdf=01;38;5;245:*.owl=01;38;5;245:*.n3=01;38;5;245:*.ttl=01;38;5;245:*.nt=01;38;5;245:*.torrent=01;38;5;245:*.xml=01;38;5;245:*Makefile=01;38;5;245:*Rakefile=01;38;5;245:*build.xml=01;38;5;245:*rc=01;38;5;245:*1=01;38;5;245:*.nfo=01;38;5;245:*README=01;38;5;245:*README.txt=01;38;5;245:*readme.txt=01;38;5;245:*.md=01;38;5;245:*.rst=01;38;5;245:*README.markdown=01;38;5;245:*.ini=01;38;5;245:*.yml=01;38;5;245:*.cfg=01;38;5;245:*.conf=01;38;5;245:*.c=01;38;5;245:*.cpp=01;38;5;245:*.cc=01;38;5;245:*.log=00;38;5;240:*.bak=00;38;5;240:*.aux=00;38;5;240:*.bbl=00;38;5;240:*.blg=00;38;5;240:*~=00;38;5;240:*#=00;38;5;240:*.part=00;38;5;240:*.incomplete=00;38;5;240:*.swp=00;38;5;240:*.tmp=00;38;5;240:*.temp=00;38;5;240:*.o=00;38;5;240:*.pyc=00;38;5;240:*.class=00;38;5;240:*.cache=00;38;5;240:*.aac=00;38;5;166:*.au=00;38;5;166:*.flac=00;38;5;166:*.mid=00;38;5;166:*.midi=00;38;5;166:*.mka=00;38;5;166:*.mp3=00;38;5;166:*.mpc=00;38;5;166:*.ogg=00;38;5;166:*.ra=00;38;5;166:*.wav=00;38;5;166:*.m4a=00;38;5;166:*.axa=00;38;5;166:*.oga=00;38;5;166:*.spx=00;38;5;166:*.xspf=00;38;5;166:*.mov=01;38;5;166:*.mpg=01;38;5;166:*.mpeg=01;38;5;166:*.m2v=01;38;5;166:*.mkv=01;38;5;166:*.ogm=01;38;5;166:*.mp4=01;38;5;166:*.m4v=01;38;5;166:*.mp4v=01;38;5;166:*.vob=01;38;5;166:*.qt=01;38;5;166:*.nuv=01;38;5;166:*.wmv=01;38;5;166:*.asf=01;38;5;166:*.rm=01;38;5;166:*.rmvb=01;38;5;166:*.flc=01;38;5;166:*.avi=01;38;5;166:*.fli=01;38;5;166:*.flv=01;38;5;166:*.gl=01;38;5;166:*.m2ts=01;38;5;166:*.divx=01;38;5;166:*.webm=01;38;5;166:*.axv=01;38;5;166:*.anx=01;38;5;166:*.ogv=01;38;5;166:*.ogx=01;38;5;166:'

if command -v vim > /dev/null ; then
    export EDITOR=$(command -v vim)
    export VISUAL=$(command -v vim)
else
    export EDITOR=$(command -v vi)
    export VISUAL=$(command -v vi)
fi

### functions ###
bak () {
    for arg in "$@" ; do
        newname="$arg-$(date -Iseconds).bak";
        cp -a "$arg" "$newname";
    done
}

cd () {
    builtin cd "$@" && ls
}

con-by-state () {
    ss -nat | tail -n +2 | awk '{print $1}'| sort | uniq -c | sort -rn
}

con-by-ip () {
    ss -ntu | tail -n +2 | awk '{print $6}' | cut -d: -f1 | sort | uniq -c | sort -n
}

f () {
    to_search=$(echo $* | sed "s/ /*/g")
    find . -iname "*${to_search}*"
}

getip () {
    dig +short myip.opendns.com @resolver1.opendns.com
}

motd () {
    [[ -f /etc/motd ]] && cat /etc/motd && echo

    uname -a
    echo

    free -m
    echo

    w
    echo
}

slit () {
    # print columns 1 2 3 ... n
    awk "{ print ${(j:,:):-\$${^@}}  }"
}

diff-fw () {
    if grep -i centos /etc/issue || [ -f /etc/redhat-release ]; then
        diff <(iptables-save) /etc/sysconfig/iptables
    else
        diff <(iptables-save) /etc/network/iptables-rules
    fi
}

vdiff-fw () {
    if grep -i centos /etc/issue || [ -f /etc/redhat-release ]; then
        vimdiff <(iptables-save) /etc/sysconfig/iptables
    else
        vimdiff <(iptables-save) /etc/network/iptables-rules
    fi
}

### prompt ###
# Since Bash only knows the cursor position by counting the number of characters *printed*, we need
# to "escape" terminal control sequences with `\[` and `\]` (man -P "$PAGER -p '^PROMPTING'" bash)
_term_bold="\[$(tput bold)\]"
_term_reset="\[$(tput sgr0)\]"
_term_blue="\[$(tput setaf 4)\]"
_term_red="\[$(tput setaf 1)\]"
_term_green="\[$(tput setaf 2)\]"
_term_standout="\[$(tput smso)\]"
_prompt_user="${_term_blue}\u${_term_reset}"
_prompt_at="${_term_red}@${_term_reset}"
_prompt_host="${_term_green}\h${_term_reset}"
_prompt_symbol="${_term_blue}"
[[ "${UID}" -eq 0 ]] && _prompt_symbol+="#" || _prompt_symbol+="$"
_prompt_symbol+="${_term_reset}"
PROMPT_COMMAND=_prompt_command
_prompt_command() {
    [[ $? -ne 0 ]] && local -r exit_code="${_term_red}$?${_term_reset} "
    local -r time="${_term_green}$(date +%H:%M:%S)${_term_reset}"
    local -r dir="${_term_standout}${_term_blue} \w ${_term_reset}"

    PS1="${time} ${exit_code}${_prompt_user}${_prompt_at}${_prompt_host} ${dir}\n${_prompt_symbol} "
}


### init ###
motd
